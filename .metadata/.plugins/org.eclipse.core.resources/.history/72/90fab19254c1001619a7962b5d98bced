package theInfinityScore;

import java.util.ArrayList;

import ddf.minim.ugens.Sampler;
import ddf.minim.ugens.Vocoder;
import processing.data.JSONArray;
import processing.data.JSONObject;

public class Lyricist implements Runnable {
	boolean verbose = false;
	
	int counter = 0;
	private static InfinityScore parent;

	String baseURL = "https://api.nytimes.com/svc/news/v3/content/all/";
	String section = "U.S.";
	String apiKey = "b7730c8193784299b8eae2afe070e53e";

	JSONObject nytData = new JSONObject();
	JSONArray nytArray;
	JSONObject entry;
	String headline;
	String headlineNew;
	int numWords;

	
	ArrayList<String> words;
	
	BingSpeech bs;

	public Lyricist(InfinityScore _parent) {
		parent = _parent;	
		words = new ArrayList<String>();
		bs = new BingSpeech();

	}

	public void run() {
		
		
		System.out.println(counter + " Times Running This Thread!");
		getHeadlines();
		splitHeadlines();
		recordSoundFiles(words);
		counter++;
	}

	public static void main(String args[]) {
		(new Thread(new Lyricist(parent))).start();
	}

	public void getHeadlines() {

		String request = baseURL + section + ".json?api-key=" + apiKey;

		nytData = parent.loadJSONObject(request);
		// println(nytData);

		nytArray = nytData.getJSONArray("results");
		// println(nytArray);

		int whichHeadline = (int) parent.random(nytArray.size() - 1);
//		int whichHeadline = 9;
		entry = nytArray.getJSONObject(whichHeadline);
		// println(entry);

		headline = entry.getString("title");
		System.out.println("NEW HEADLINE: " + headline);

	}

	public void splitHeadlines() {
		words.clear();
		String[] list = parent.split(headline, " ");
		if (parent.verbose)
			System.out.println("   splitHeadlines: # of words in headline: "
					+ list.length);
		numWords = list.length;
		for (int i = 0; i < list.length; i++) {
			//GET RID OF NON-ASCII CHARACTERS (fuckin' NYT style guide!)
			String replacementString = list[i].replaceAll("[^\\x00-\\x7F]", "");
			//
			words.add(replacementString);
		}

	}
	
	public void recordSoundFiles(ArrayList<String> l) {
		//repeatCount = 0;
		int numFiles = l.size();
		if (parent.verbose)
			System.out.println("Making New Lyrics: recordSoundFiles: " + numFiles
					+ " is size of String Array List");
		for (int i = 0; i < l.size(); i++) {
			bs.recordThis(l.get(i), i);
			if (parent.verbose)
				System.out.println("Making New Lyrics: recordSoundFiles: saved" + i);
		}
		
		
		parent.singer.initSoundFiles(numFiles);
	}
	
	public void display(){
		for(int i = 0; i < words.size(); i++){
			if(i = parent.singer.currentPlace){
				parent.fill(parent.gui.hilightColor.toARGB()));
			}
			parent.text(words.get(i), 0, i*20);
		}
	}
	

	
	
	
}
